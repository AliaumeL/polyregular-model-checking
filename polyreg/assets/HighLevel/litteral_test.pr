def getFirstWord (s : [Char]) : [Char] :=
    let mut seen_space := False in
    for (i, v) in enumerate(s) do 
        if not seen_space and not (v === ' ') then 
            yield v
        endif
        if v === ' ' then 
            seen_space := True
        endif
    done

def getCurrentWord (s : [Char] with (i)) : [Char] :=
    let mut seen_space := False in
    for (j, v) in enumerate(s) do 
       if j > i then 
           if v === ' ' then 
               seen_space := True
           endif
           if not seen_space then 
              yield v 
           endif
       endif
     done 

def words (ss : [Char]) : [[Char]] :=
    yield getFirstWord(ss)
    for (i, vv) in enumerate(ss) do 
        if vv === ' ' then 
            yield getCurrentWord(ss with (i)) 
        endif 
     done


def main (w : [Char]) : [Char] :=
    let v  := words(w) in
    if v === [] then
        return "No words found"
    else
        if v === [""] then
            return "It is the empty string"
        else
            if v === ["go", "to", "park"] then
                return "gotopark!"
            else
                return "No match"
            endif
        endif
    endif

