def getFirstWord (s : [Char]) : [Char] :=
    let mut seen_space := False in
    for (i, v) in enumerate(s) do 
        if not seen_space and not (v =Char= ' ') then 
            yield v
        endif
        if v =Char= ' ' then 
            seen_space := True
        endif
    done

def getCurrentWord (s : [Char] with (i)) : [Char] :=
    let mut seen_space := False in
    for (j, v) in enumerate(s) do 
       if j > i then 
           if v =Char= ' ' then 
               seen_space := True
           endif
           if not seen_space then 
              yield v 
           endif
       endif
     done 

def words (s : [Char]) : [[Char]] :=
    yield getFirstWord(s)
    for (i, v) in enumerate(s) do 
        if v =Char= ' ' then 
            yield getCurrentWord(s with (i)) 
        endif 
     done

def main (s : [Char]) : [Char] :=
    let mut not_first := False in
    let ws := words(s) in
    for (i, w) in reversed(enumerate(ws)) do 
        if not_first then 
            yield ' '
        endif
        not_first := True
        for (j, c) in enumerate(w) do 
            yield c
        done
    done
