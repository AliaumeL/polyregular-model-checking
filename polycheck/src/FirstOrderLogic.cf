-- Translate to haskell with `bnfc --haskell -d -p Parser FirstOrderLogic.cf`
-- Remember to remove the Test.hs file, which breaks the build

comment "--" ;

-- Abstract syntax
FQuant. Formula ::= Quantifier Formula ;
FIff. Formula ::= Formula1 "<->" Formula ;
FImpl. Formula1 ::= Formula2 "->" Formula1 ;
FAnd. Formula2 ::= Formula3 "/\\" Formula2 ;
FOr. Formula3 ::= Formula4 "\\/" Formula3 ;
FNot. Formula4 ::= "not" Formula4 ;
FTrue. Formula4 ::= "true" ;
FFalse. Formula4 ::= "false" ;
FAtom. Formula4 ::= Predicate ;

coercions Formula 4 ;

QuantForall. Quantifier ::= "forall" Ident ":" Type "." ;
QuantExists. Quantifier ::= "exists" Ident ":" Type "." ;

TPos . Type ::= "Pos" ;
TBool . Type ::= "Bool" ;
TTag  . Type ::= "Tag" ;

BoolVar . Predicate ::= Ident ; 
BinTest . Predicate ::= Ident TestOp Ident ; 
BinLetEq . Predicate ::= Ident "=" Char ;
BinTagEq . Predicate ::= Ident  "=" String ;

TLe . TestOp ::= "<=" ; 
TLt . TestOp ::= "<" ; 
TGe . TestOp ::= ">=" ; 
TGt . TestOp ::= ">" ; 
TEq . TestOp ::= "=" ; 
TNeq . TestOp ::= "!=" ;
